import { PrismaClient } from '@prisma/client'
import { contentGenerator } from '../lib/content-generator'

const prisma = new PrismaClient()

async function generateToday() {
  try {
    console.log('üöÄ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ —Å–µ–≥–æ–¥–Ω—è...')

    const today = new Date().toISOString().split('T')[0]
    const tz = 'Europe/Amsterdam'

    console.log(`üìÖ –î–∞—Ç–∞: ${today}`)
    console.log(`‚è∞ –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: ${tz}`)

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç
    const [dailyTips, dailyForecasts, lunarToday] = await Promise.all([
      contentGenerator.draftDailyTips(today, tz),
      contentGenerator.draftDailyForecast(today, tz, ['general', 'love', 'career']),
      contentGenerator.draftLunarToday(today, tz),
    ])

    console.log(`‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ:`)
    console.log(`   - ${dailyTips.length} —Å–æ–≤–µ—Ç–æ–≤ –¥–Ω—è`)
    console.log(`   - ${Object.keys(dailyForecasts).length} –ø—Ä–æ–≥–Ω–æ–∑–æ–≤`)
    console.log(`   - 1 –ª—É–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å`)

    // –°–æ–∑–¥–∞–µ–º –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    const createdItems = []

    // –°–æ–∑–¥–∞–µ–º —Å–æ–≤–µ—Ç—ã –¥–Ω—è
    for (const tip of dailyTips) {
      const createdTip = await prisma.contentItem.create({
        data: {
          type: 'DAILY_TIP_DOMAIN',
          title: tip.title,
          status: 'DRAFT',
          version: 1,
          payload: tip.payload,
          targeting: tip.targeting,
          schedule: tip.schedule,
          updatedById: 'system',
        },
      })
      createdItems.push({ type: 'DAILY_TIP_DOMAIN', id: createdTip.id, title: createdTip.title })
      console.log(`   üìù –°–æ–∑–¥–∞–Ω —Å–æ–≤–µ—Ç: ${createdTip.title}`)
    }

    // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–≥–Ω–æ–∑—ã –ø–æ –¥–æ–º–µ–Ω–∞–º
    for (const [domain, text] of Object.entries(dailyForecasts)) {
      const createdForecast = await prisma.contentItem.create({
        data: {
          type: 'DAILY_FORECAST_DOMAIN',
          title: `–ü—Ä–æ–≥–Ω–æ–∑ ${domain} –Ω–∞ ${today}`,
          status: 'DRAFT',
          version: 1,
          payload: {
            domain,
            text,
            mood: 'neutral',
            priority: 'medium',
          },
          targeting: {},
          schedule: { timezone: tz },
          updatedById: 'system',
        },
      })
      createdItems.push({ type: 'DAILY_FORECAST_DOMAIN', id: createdForecast.id, title: createdForecast.title })
      console.log(`   üìù –°–æ–∑–¥–∞–Ω –ø—Ä–æ–≥–Ω–æ–∑: ${createdForecast.title}`)
    }

    // –°–æ–∑–¥–∞–µ–º –ª—É–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å
    const createdLunar = await prisma.contentItem.create({
      data: {
        type: 'LUNAR_TODAY',
        title: lunarToday.title,
        status: 'DRAFT',
        version: 1,
        payload: lunarToday.payload,
        targeting: lunarToday.targeting,
        schedule: lunarToday.schedule,
        updatedById: 'system',
      },
    })
    createdItems.push({ type: 'LUNAR_TODAY', id: createdLunar.id, title: createdLunar.title })
    console.log(`   üìù –°–æ–∑–¥–∞–Ω –ª—É–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å: ${createdLunar.title}`)

    // –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
    await prisma.auditLog.create({
      data: {
        action: 'GENERATE_DAILY_CONTENT_SCRIPT',
        entity: 'ContentItem',
        details: {
          date: today,
          timezone: tz,
          generatedItems: createdItems.length,
          types: createdItems.map(item => item.type),
        },
        userId: 'system',
      },
    })

    console.log('\nüéâ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!')
    console.log(`üìä –í—Å–µ–≥–æ —Å–æ–∑–¥–∞–Ω–æ: ${createdItems.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤`)
    console.log('\nüìã –°–æ–∑–¥–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã:')
    createdItems.forEach((item, index) => {
      console.log(`   ${index + 1}. [${item.type}] ${item.title}`)
    })

    console.log('\nüí° –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:')
    console.log('   1. –û—Ç–∫—Ä–æ–π—Ç–µ –∞–¥–º–∏–Ω–∫—É: http://localhost:3000/admin/content')
    console.log('   2. –ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —á–µ—Ä–Ω–æ–≤–∏–∫–∏')
    console.log('   3. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –∏ –æ–ø—É–±–ª–∏–∫—É–π—Ç–µ –Ω—É–∂–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç')
    console.log('   4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É "–°–µ–≥–æ–¥–Ω—è" –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è')

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞:', error)
    throw error
  } finally {
    await prisma.$disconnect()
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
generateToday()
  .then(() => {
    console.log('\n‚ú® –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!')
    process.exit(0)
  })
  .catch((error) => {
    console.error('\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error)
    process.exit(1)
  })







