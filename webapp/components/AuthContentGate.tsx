"use client";

import { ReactNode, useState } from 'react';
import { useAuth } from '../contexts/AuthContext';
import AuthBottomSheetModal from './AuthBottomSheetModal';

interface AuthContentGateProps {
  children: ReactNode;
  requireAuth?: boolean;
  blurContent?: boolean;
  title?: string;
  description?: string;
  className?: string;
}

export function AuthContentGate({
  children,
  requireAuth = true,
  blurContent = true,
  title = "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç",
  description = "–í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≥–Ω–æ–∑—ã –∏ –Ω–∞—Ç–∞–ª—å–Ω—É—é –∫–∞—Ä—Ç—É",
  className = ""
}: AuthContentGateProps) {
  const { isAuthenticated, isLoading } = useAuth();
  const [showAuthModal, setShowAuthModal] = useState(false);

  // –ï—Å–ª–∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–∫–µ–ª–µ—Ç–æ–Ω
  if (isLoading) {
    return (
      <div className={`animate-pulse ${className}`}>
        <div className="bg-zinc-800 rounded-lg h-32 mb-4"></div>
        <div className="bg-zinc-800 rounded h-4 w-3/4 mb-2"></div>
        <div className="bg-zinc-800 rounded h-4 w-1/2"></div>
      </div>
    );
  }

  // –ï—Å–ª–∏ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –≤—Å–µ–º
  if (!requireAuth) {
    return <div className={className}>{children}</div>;
  }

  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
  if (isAuthenticated) {
    return <div className={className}>{children}</div>;
  }

  // –î–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —Å –±–ª—é—Ä–æ–º –∏ –∫–Ω–æ–ø–∫–æ–π
  return (
    <div className={`relative ${className}`}>
      {/* –ö–æ–Ω—Ç–µ–Ω—Ç —Å –±–ª—é—Ä–æ–º */}
      {blurContent && (
        <div className="blur-sm pointer-events-none select-none pb-20">
          {children}
        </div>
      )}
      
      {/* Overlay —Å –ø—Ä–∏–∑—ã–≤–æ–º –∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ */}
      <div className={`${blurContent ? 'absolute inset-x-0 top-0 bottom-20' : ''} flex items-center justify-center pb-4 min-h-[400px] pointer-events-none`}>
        <div className="bg-zinc-900/95 backdrop-blur-sm border border-zinc-700 rounded-xl p-6 text-center max-w-sm mx-auto pointer-events-auto">
          {/* –ò–∫–æ–Ω–∫–∞ */}
          <div className="w-16 h-16 bg-gradient-to-br from-purple-500 to-pink-500 rounded-full flex items-center justify-center mx-auto mb-4">
            <svg className="w-8 h-8 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
            </svg>
          </div>
          
          {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
          <h3 className="text-xl font-bold text-white mb-3">
            {title}
          </h3>
          
          {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
          <p className="text-zinc-400 text-sm mb-6 leading-relaxed">
            {description}
          </p>
          
          {/* –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –≤—Ö–æ–¥–∞ */}
          <button
            onClick={() => setShowAuthModal(true)}
            className="w-full px-6 py-3 bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white font-semibold rounded-xl transition-all duration-200 transform hover:scale-105"
          >
            –í–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç
          </button>
          
          {/* –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ */}
          <div className="mt-6 pt-4 border-t border-zinc-700">
            <p className="text-xs text-zinc-500 mb-3">–ü–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫:</p>
            <div className="flex flex-wrap gap-2 justify-center">
              <span className="px-2 py-1 bg-purple-600/20 text-purple-300 text-xs rounded">
                üîÆ –ù–∞—Ç–∞–ª—å–Ω–∞—è –∫–∞—Ä—Ç–∞
              </span>
              <span className="px-2 py-1 bg-pink-600/20 text-pink-300 text-xs rounded">
                üí´ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≥–Ω–æ–∑—ã
              </span>
              <span className="px-2 py-1 bg-blue-600/20 text-blue-300 text-xs rounded">
                ‚ù§Ô∏è –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å
              </span>
            </div>
          </div>
        </div>
      </div>

      {/* Auth Modal */}
      <AuthBottomSheetModal 
        isOpen={showAuthModal}
        onClose={() => setShowAuthModal(false)}
      />
    </div>
  );
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø—É–±–ª–∏—á–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
export function PublicContent({ children, className = "" }: { children: ReactNode, className?: string }) {
  return (
    <AuthContentGate 
      requireAuth={false} 
      className={className}
    >
      {children}
    </AuthContentGate>
  );
}

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö
export function PrivateContent({ 
  children, 
  title,
  description,
  className = "" 
}: { 
  children: ReactNode, 
  title?: string,
  description?: string,
  className?: string 
}) {
  return (
    <AuthContentGate 
      requireAuth={true}
      title={title}
      description={description}
      className={className}
    >
      {children}
    </AuthContentGate>
  );
}