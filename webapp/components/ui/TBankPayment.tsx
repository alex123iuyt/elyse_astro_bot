"use client";

import { useState } from 'react';
import Loader from './Loader';

interface TBankPaymentProps {
  amount: number;
  planName: string;
  onSuccess: (paymentId: string) => void;
  onError: (error: string) => void;
  onCancel: () => void;
}

export default function TBankPayment({ amount, planName, onSuccess, onError, onCancel }: TBankPaymentProps) {
  const [isLoading, setIsLoading] = useState(false);
  const [paymentUrl, setPaymentUrl] = useState<string | null>(null);

  const handlePayment = async () => {
    setIsLoading(true);
    
    try {
      // –ó–¥–µ—Å—å –±—É–¥–µ—Ç API –≤—ã–∑–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞ –≤ –¢-–ë–∞–Ω–∫–µ
      const response = await fetch('/api/payment/tbank/create', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          amount,
          planName,
          currency: 'RUB',
          description: `–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ ${planName}`,
          returnUrl: `${window.location.origin}/payment/success`,
          cancelUrl: `${window.location.origin}/payment/cancel`,
        }),
      });

      if (!response.ok) {
        throw new Error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞');
      }

      const data = await response.json();
      
      if (data.paymentUrl) {
        setPaymentUrl(data.paymentUrl);
        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã –¢-–ë–∞–Ω–∫–∞
        window.location.href = data.paymentUrl;
      } else {
        throw new Error('–ù–µ –ø–æ–ª—É—á–µ–Ω URL –¥–ª—è –æ–ø–ª–∞—Ç—ã');
      }
    } catch (error) {
      console.error('Payment error:', error);
      onError(error instanceof Error ? error.message : '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–ª–∞—Ç–µ–∂–∞');
    } finally {
      setIsLoading(false);
    }
  };

  if (isLoading) {
    return (
      <div className="flex flex-col items-center justify-center p-8 space-y-4">
        <Loader size="lg" text="–°–æ–∑–¥–∞–µ–º –ø–ª–∞—Ç–µ–∂..." />
        <p className="text-zinc-400 text-center">
          –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–ø–ª–∞—Ç—ã –¢-–ë–∞–Ω–∫–∞...
        </p>
      </div>
    );
  }

  return (
    <div className="bg-zinc-800 rounded-xl p-6 space-y-6">
      <div className="text-center">
        <div className="w-16 h-16 bg-blue-600 rounded-full flex items-center justify-center mx-auto mb-4">
          <span className="text-2xl">üè¶</span>
        </div>
        <h3 className="text-xl font-semibold mb-2">–û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ –¢-–ë–∞–Ω–∫</h3>
        <p className="text-zinc-400">
          –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ —ç–∫–≤–∞–π—Ä–∏–Ω–≥ –¢-–ë–∞–Ω–∫–∞
        </p>
      </div>

      <div className="bg-zinc-700 rounded-lg p-4 space-y-3">
        <div className="flex justify-between">
          <span className="text-zinc-400">–¢–∞—Ä–∏—Ñ:</span>
          <span className="font-medium">{planName}</span>
        </div>
        <div className="flex justify-between">
          <span className="text-zinc-400">–°—É–º–º–∞:</span>
          <span className="text-xl font-bold text-emerald-400">
            ‚ÇΩ{amount.toLocaleString()}
          </span>
        </div>
      </div>

      <div className="space-y-3">
        <button
          onClick={handlePayment}
          disabled={isLoading}
          className="w-full bg-blue-600 hover:bg-blue-700 disabled:bg-blue-600/50 text-white py-3 px-4 rounded-lg font-medium transition-colors flex items-center justify-center space-x-2"
        >
          <span>üí≥</span>
          <span>–û–ø–ª–∞—Ç–∏—Ç—å —á–µ—Ä–µ–∑ –¢-–ë–∞–Ω–∫</span>
        </button>
        
        <button
          onClick={onCancel}
          className="w-full bg-zinc-600 hover:bg-zinc-700 text-white py-3 px-4 rounded-lg font-medium transition-colors"
        >
          –û—Ç–º–µ–Ω–∞
        </button>
      </div>

      <div className="text-xs text-zinc-500 text-center space-y-1">
        <p>–û–ø–ª–∞—Ç–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è —á–µ—Ä–µ–∑ –∑–∞—â–∏—â–µ–Ω–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ</p>
        <p>–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –≤—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –æ–±—Ä–∞—Ç–Ω–æ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</p>
      </div>
    </div>
  );
}




