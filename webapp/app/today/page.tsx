"use client";

import { useEffect, useState } from 'react'
import Header from '../../components/Header'
import Stories from '../../components/today/Stories'
import Forecast from '../../components/today/Forecast'
import LunarCalendar from '../../components/today/LunarCalendar'
import Banner from '../../components/today/Banner'
import BottomNav from '../../components/BottomNav'
import { useUser } from '../../store/user'

// –¢–∏–ø—ã –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ CMS
interface StorySlide {
  id: string;
  kind: 'text' | 'image' | 'video';
  title?: string;
  text?: string;
  backgroundImage?: string;
  backgroundColor?: string;
  textColor?: string;
  durationMs: number;
}

interface Story {
  id: string;
  type: 'DAILY_TIPS' | 'DO_DONT' | 'TODAYS_LUCK';
  title: string;
  category: string;
  slides: StorySlide[];
  publishedAt: string;
}

interface ForecastData {
  id: string;
  title: string;
  transitsCount: number;
  transits: Array<{
    planet: string;
    sign: string;
    house: number;
    aspect: string;
  }>;
  focus: Array<{
    category: string;
    description: string;
  }>;
  troubles: Array<{
    category: string;
    description: string;
  }>;
  emotionalShifts: {
    title: string;
    description: string;
  };
  careerDynamics: {
    title: string;
    description: string;
  };
  publishedAt: string;
}

interface LunarData {
  currentPhase: {
    name: string;
    percentage: number;
    sign: string;
    date: string;
  };
  monthRange: {
    start: string;
    end: string;
  };
  phases: Array<{
    date: string;
    phase: string;
    sign: string;
    icon: string;
  }>;
}

interface BannerData {
  id: string;
  type: string;
  title: string;
  subtitle: string;
  backgroundImage: string;
  ctaText: string;
  ctaAction: string;
  ctaLink: string;
}

export default function TodayPage() {
  const { profile } = useUser()
  const [isLoading, setIsLoading] = useState(true)
  const [content, setContent] = useState<{
    stories: Story[]
    forecast: ForecastData | null
    lunar: LunarData | null
    banner: BannerData | null
  }>({
    stories: [],
    forecast: null,
    lunar: null,
    banner: null,
  })

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –∏–∑ CMS
  useEffect(() => {
    const loadContent = async () => {
      try {
        setIsLoading(true)
        const today = new Date().toISOString().split('T')[0]
        const tz = Intl.DateTimeFormat().resolvedOptions().timeZone

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
        const [storiesRes, forecastRes, lunarRes, bannerRes] = await Promise.all([
          fetch(`/api/content/stories?date=${today}&tz=${tz}`),
          fetch(`/api/content/forecast?date=${today}&tz=${tz}`),
          fetch(`/api/content/lunar/month?date=${today}&tz=${tz}`),
          fetch(`/api/content/banner?type=CHAT_ASTROLOGER`),
        ])

        if (storiesRes.ok) {
          const storiesData = await storiesRes.json()
          if (storiesData.success) {
            setContent(prev => ({ ...prev, stories: storiesData.data }))
          }
        }

        if (forecastRes.ok) {
          const forecastData = await forecastRes.json()
          if (forecastData.success) {
            setContent(prev => ({ ...prev, forecast: forecastData.data }))
          }
        }

        if (lunarRes.ok) {
          const lunarData = await lunarRes.json()
          if (lunarData.success) {
            setContent(prev => ({ ...prev, lunar: lunarData.data }))
          }
        }

        if (bannerRes.ok) {
          const bannerData = await bannerRes.json()
          if (bannerData.success) {
            setContent(prev => ({ ...prev, banner: bannerData.data }))
          }
        }

      } catch (error) {
        console.error('Error loading content:', error)
        // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º fallback –∫–æ–Ω—Ç–µ–Ω—Ç
      } finally {
        setIsLoading(false)
      }
    }

    loadContent()
  }, [])

  // Fallback –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ CMS –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
  const fallbackStories: Story[] = [
    {
      id: 'story_001',
      type: 'DAILY_TIPS',
      title: '–°–æ–≤–µ—Ç –¥–Ω—è',
      category: '–õ–Æ–ë–û–í–¨',
      slides: [
        {
          id: 'slide_001',
          kind: 'text',
          title: '–õ—é–±–æ–≤—å',
          text: "–ù–µ —Å—á–∏—Ç–∞–π—Ç–µ –æ—à–∏–±–∫–∏. –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –±–ª–∞–≥–æ–¥–∞—Ä–∏—Ç–µ –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã—Ö –ª—é–±–∏—Ç–µ.",
          backgroundImage: 'https://images.unsplash.com/photo-1519120944692-1a8d8cfc1056?q=80&w=1200&auto=format&fit=crop',
          backgroundColor: '#1a1a2e',
          textColor: '#ffffff',
          durationMs: 5000
        }
      ],
      publishedAt: new Date().toISOString()
    },
    {
      id: 'story_002',
      type: 'DO_DONT',
      title: '–î–µ–ª–∞–π / –ù–µ –¥–µ–ª–∞–π',
      category: '–ë–ê–õ–ê–ù–°',
      slides: [
        {
          id: 'slide_002',
          kind: 'text',
          title: '–ë–∞–ª–∞–Ω—Å',
          text: '–î–µ–ª–∞–π: –ü—Ä–∞–∫—Ç–∏–∫—É–π –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç—å. –ù–µ –¥–µ–ª–∞–π: –¢–æ—Ä–æ–ø–∏—Å—å —Å —Ä–µ—à–µ–Ω–∏—è–º–∏.',
          backgroundImage: 'https://images.unsplash.com/photo-1500534314209-a25ddb2bd429?q=80&w=1200&auto=format&fit=crop',
          backgroundColor: '#16213e',
          textColor: '#ffffff',
          durationMs: 5000
        }
      ],
      publishedAt: new Date().toISOString()
    },
    {
      id: 'story_003',
      type: 'TODAYS_LUCK',
      title: '–£–¥–∞—á–∞ —Å–µ–≥–æ–¥–Ω—è',
      category: '–§–û–†–¢–£–ù–ê',
      slides: [
        {
          id: 'slide_003',
          kind: 'text',
          title: '–§–æ—Ä—Ç—É–Ω–∞',
          text: '–í–∞—à–µ —Å—á–∞—Å—Ç–ª–∏–≤–æ–µ —á–∏—Å–ª–æ 7. –§–æ–∫—É—Å–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ –Ω–æ–≤—ã—Ö –Ω–∞—á–∏–Ω–∞–Ω–∏—è—Ö.',
          backgroundImage: 'https://images.unsplash.com/photo-1520248730239-095647cc37f1?q=80&w=1200&auto=format&fit=crop',
          backgroundColor: '#0f3460',
          textColor: '#ffffff',
          durationMs: 5000
        }
      ],
      publishedAt: new Date().toISOString()
    }
  ]

  const fallbackForecast: ForecastData = {
    id: 'forecast_001',
    title: '–ù–∞–≤–∏–≥–∞—Ü–∏—è —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω—ã',
    transitsCount: 5,
    transits: [
      {
        planet: '–ú–ê–†–°',
        sign: '–í–ï–°–´',
        house: 7,
        aspect: '–¢–†–ò–ù'
      },
      {
        planet: '–Æ–ü–ò–¢–ï–†',
        sign: '–¢–ï–õ–ï–¶',
        house: 2,
        aspect: '–ö–í–ê–î–†–ê–¢'
      }
    ],
    focus: [
      {
        category: '–†–ï–®–ò–ú–û–°–¢–¨',
        description: '–í–∞—à–∞ —Å–∏–ª–∞ –≤–æ–ª–∏ —Å–∏–ª—å–Ω–∞ —Å–µ–≥–æ–¥–Ω—è'
      },
      {
        category: '–¢–í–û–†–ß–ï–°–¢–í–û',
        description: '–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ —Ç–µ—á–µ—Ç —Å–≤–æ–±–æ–¥–Ω–æ'
      },
      {
        category: '–û–ë–©–ï–ù–ò–ï',
        description: '–í—ã—Ä–∞–∂–∞–π—Ç–µ —Å–≤–æ–∏ –º—ã—Å–ª–∏ —è—Å–Ω–æ'
      }
    ],
    troubles: [
      {
        category: '–ö–û–ù–§–õ–ò–ö–¢',
        description: '–ò–∑–±–µ–≥–∞–π—Ç–µ –Ω–µ–Ω—É–∂–Ω—ã—Ö —Å–ø–æ—Ä–æ–≤'
      },
      {
        category: '–ù–ï–î–û–†–ê–ó–£–ú–ï–ù–ò–ï',
        description: '–î–≤–∞–∂–¥—ã –ø—Ä–æ–≤–µ—Ä—è–π—Ç–µ –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è'
      },
      {
        category: '–°–¢–†–ï–°–°',
        description: '–î–µ–ª–∞–π—Ç–µ –ø–µ—Ä–µ—Ä—ã–≤—ã –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏'
      }
    ],
    emotionalShifts: {
      title: '–≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤–ø–µ—Ä–µ–¥–∏',
      description: '–í–∞—à–∏ —ç–º–æ—Ü–∏–∏ –º–æ–≥—É—Ç —á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å—Å—è —É—Å–∏–ª–µ–Ω–Ω—ã–º–∏ —Å–µ–≥–æ–¥–Ω—è, –∫–æ–≥–¥–∞ –ª—É–Ω–∞ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç—Å—è —Å–æ –°–∫–æ—Ä–ø–∏–æ–Ω–æ–º. –≠—Ç–æ –±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è —Å–∞–º–æ–∞–Ω–∞–ª–∏–∑–∞, –Ω–æ –±—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã —Å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º–∏ —Ä–∞–∑–Ω–æ–≥–ª–∞—Å–∏—è–º–∏, –æ—Å–æ–±–µ–Ω–Ω–æ –≤ –ª–∏—á–Ω—ã—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö.'
    },
    careerDynamics: {
      title: '–ö–∞—Ä—å–µ—Ä–Ω–∞—è –¥–∏–Ω–∞–º–∏–∫–∞',
      description: '–ú–∞—Ä—Å –≤ –í–µ—Å–∞—Ö —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã –Ω–∞ —Ä–∞–±–æ—Ç–µ. –û—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å —Å–ø–æ–∫–æ–π–Ω—ã–º–∏ –∏ –≤—ã–±–∏—Ä–∞–π—Ç–µ —Å–≤–æ–∏ –±–∏—Ç–≤—ã –º—É–¥—Ä–æ. –ü–æ–Ω–∏–º–∞–Ω–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤ –±—É–¥–µ—Ç –∂–∏–∑–Ω–µ–Ω–Ω–æ –≤–∞–∂–Ω—ã–º –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –Ω–µ–Ω—É–∂–Ω–æ–≥–æ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è.'
    },
    publishedAt: new Date().toISOString()
  }

  const fallbackLunar: LunarData = {
    currentPhase: {
      name: '–†–∞—Å—Ç—É—â–∏–π —Å–µ—Ä–ø',
      percentage: 25,
      sign: '–°–ö–û–†–ü–ò–û–ù',
      date: new Date().toISOString()
    },
    monthRange: {
      start: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),
      end: new Date(Date.now() + 16 * 24 * 60 * 60 * 1000).toISOString()
    },
    phases: [
      {
        date: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),
        phase: '–ù–û–í–û–õ–£–ù–ò–ï',
        sign: '–ö–û–ó–ï–†–û–ì',
        icon: 'üåë'
      },
      {
        date: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000).toISOString(),
        phase: '–ü–ï–†–í–ê–Ø –ß–ï–¢–í–ï–†–¢–¨',
        sign: '–û–í–ï–ù',
        icon: 'üåì'
      },
      {
        date: new Date(Date.now() + 10 * 24 * 60 * 60 * 1000).toISOString(),
        phase: '–ü–û–õ–ù–û–õ–£–ù–ò–ï',
        sign: '–õ–ï–í',
        icon: 'üåï'
      },
      {
        date: new Date(Date.now() + 16 * 24 * 60 * 60 * 1000).toISOString(),
        phase: '–ü–û–°–õ–ï–î–ù–Ø–Ø –ß–ï–¢–í–ï–†–¢–¨',
        sign: '–°–ö–û–†–ü–ò–û–ù',
        icon: 'üåó'
      }
    ]
  }

  const fallbackBanner: BannerData = {
    id: 'banner_001',
    type: 'CHAT_ASTROLOGER',
    title: '–ê—Å—Ç—Ä–æ–∫–∞—Ä—Ç–æ–≥—Ä–∞—Ñ–∏—è',
    subtitle: '–ì–¥–µ –Ω–∞ –ó–µ–º–ª–µ —è –Ω–∞–π–¥—É –ª—é–±–æ–≤—å, –¥–µ–Ω—å–≥–∏ –∏ –∫–∞—Ä—å–µ—Ä–Ω—ã–π —É—Å–ø–µ—Ö?',
    backgroundImage: 'https://images.unsplash.com/photo-1549880338-65ddcdfd017b?q=80&w=1200&auto=format&fit=crop',
    ctaText: '–ü–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç',
    ctaAction: 'CHAT_ADVISOR',
    ctaLink: '/chat'
  }

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ CMS –∏–ª–∏ fallback
  const stories = content.stories.length > 0 ? content.stories : fallbackStories
  const forecast = content.forecast || fallbackForecast
  const lunar = content.lunar || fallbackLunar
  const banner = content.banner || fallbackBanner

  if (isLoading) {
    return (
      <div className="flex items-center justify-center min-h-screen">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-purple-600 mx-auto mb-4"></div>
          <p className="text-gray-600">–ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç...</p>
        </div>
      </div>
    )
  }

  return (
    <>
      <Header 
        name={profile.name} 
        tags={["‚òâ Virgo", "‚Üë Libra", "‚òæ Scorpio"]}
        onOpenSettings={() => window.location.href = "/settings"}
        onOpenPremium={() => window.location.href = "/profile"}
      />
      <div className="p-4 space-y-6 pb-24">
        {/* 1. Stories - –ø–µ—Ä–µ–º–µ—â–µ–Ω—ã –Ω–∞–≤–µ—Ä—Ö */}
        <Stories stories={stories} />
        
        {/* 2. Forecast */}
        <Forecast forecast={forecast} />
        
        {/* 3. Lunar Calendar */}
        <LunarCalendar lunarData={lunar} />
        
        {/* 4. Banner */}
        <Banner banner={banner} />
      </div>
      
      {/* Bottom Navigation */}
      <BottomNav />
    </>
  )
}


