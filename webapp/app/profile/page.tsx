"use client";
import { useEffect, useState } from 'react';
import { useRouter } from 'next/navigation';
import { ls } from '../../lib/storage';
import { useAuth } from '../../contexts/AuthContext';
import { PrivateContent } from '../../components/AuthContentGate';


interface NatalChartData {
  name: string;
  birthDate: string;
  birthTime: string;
  birthCity: string;
  birthCountry: string;
  gender: string;
  relationshipStatus: string;
  occupation: string;
  interests: string[];
}

export default function ProfilePage() {
  const router = useRouter();
  const [isAdmin, setIsAdmin] = useState(false);

  const [natalChartData, setNatalChartData] = useState<NatalChartData | null>(
    ls.get('elyse.natalChart', null)
  );
  const [notifications, setNotifications] = useState({
    push: ls.get('elyse.notifications.push', true),
    daily: ls.get('elyse.notifications.daily', true),
    weekly: ls.get('elyse.notifications.weekly', false)
  });
  
  useEffect(() => {
    const role = ls.get('elyse.role', 'user') as any;
    setIsAdmin(role === 'admin');
    // –ù–∞ –ø—É–±–ª–∏—á–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω–µ –Ω–µ –¥–µ–ª–∞–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤
  }, []);

  const handleToggle = (key: keyof typeof notifications) => {
    const newValue = !notifications[key];
    setNotifications(prev => ({ ...prev, [key]: newValue }));
    ls.set(`elyse.notifications.${key}`, newValue);
  };

  const [isLoggingOut, setIsLoggingOut] = useState(false);

  const { logout } = useAuth();

  const handleLogout = async () => {
    if (isLoggingOut) return; // –ó–∞—â–∏—Ç–∞ –æ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∫–ª–∏–∫–æ–≤
    
    setIsLoggingOut(true);
    
    try {
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é logout –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
      await logout();
      
      // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
      router.replace('/auth');
    } catch (error) {
      console.error('Logout error:', error);
      // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –≤—Å—ë —Ä–∞–≤–Ω–æ —É–≤–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
      router.replace('/auth');
    } finally {
      setIsLoggingOut(false);
    }
  };



  const profileData = {
    name: natalChartData?.name || '–ê–ª–µ–∫—Å',
    zodiac: '–°—Ç—Ä–µ–ª–µ—Ü',
    birthDate: natalChartData?.birthDate || '15 –¥–µ–∫–∞–±—Ä—è 1995',
    birthTime: natalChartData?.birthTime || '14:30',
    city: natalChartData?.birthCity || '–ú–æ—Å–∫–≤–∞',
    timezone: 'UTC+3'
  };

  const isProfileComplete = natalChartData && 
    natalChartData.name && 
    natalChartData.birthDate && 
    natalChartData.birthTime && 
    natalChartData.birthCity;

  return (
    <div className="min-h-screen bg-black text-white">
      {/* Header */}
      <div className="p-4 border-b border-zinc-800">
        <div className="flex items-center justify-between">
          <h1 className="text-xl font-semibold">–ü—Ä–æ—Ñ–∏–ª—å</h1>
          <button 
            onClick={() => router.back()}
            className="w-8 h-8 bg-zinc-800 rounded-full flex items-center justify-center"
          >
            ‚Üê
          </button>
        </div>
      </div>

      {/* Main Content */}
      <PrivateContent
        title="–õ–∏—á–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å"
        description="–í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç, —á—Ç–æ–±—ã –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å, –Ω–∞—Ç–∞–ª—å–Ω—É—é –∫–∞—Ä—Ç—É –∏ –ø–æ–ª—É—á–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≥–Ω–æ–∑—ã"
      >
        <div className="p-4 space-y-6 pb-24">
        {/* Profile Card */}
        <div className="bg-gradient-to-br from-emerald-500/20 to-teal-500/20 border border-emerald-500/30 rounded-2xl p-6">
          <div className="flex items-center space-x-4 mb-4">
            <div className="w-20 h-20 bg-emerald-500/30 rounded-full flex items-center justify-center">
              <span className="text-4xl">üë§</span>
            </div>
            <div className="flex-1">
              <h2 className="text-2xl font-bold">{profileData.name}</h2>
              <div className="text-emerald-300 text-lg">{profileData.zodiac}</div>
              {!isProfileComplete && (
                <div className="text-yellow-400 text-sm mt-1">–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω</div>
              )}
            </div>
          </div>
          
          <div className="grid grid-cols-2 gap-4 text-sm">
            <div>
              <div className="text-zinc-400 mb-1">–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è</div>
              <div className="text-zinc-200">{profileData.birthDate}</div>
            </div>
            <div>
              <div className="text-zinc-400 mb-1">–í—Ä–µ–º—è —Ä–æ–∂–¥–µ–Ω–∏—è</div>
              <div className="text-zinc-200">{profileData.birthTime}</div>
            </div>
            <div>
              <div className="text-zinc-400 mb-1">–ì–æ—Ä–æ–¥</div>
              <div className="text-zinc-200">{profileData.city}</div>
            </div>
            <div>
              <div className="text-zinc-400 mb-1">–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å</div>
              <div className="text-zinc-200">{profileData.timezone}</div>
            </div>
          </div>

          {/* Natal Chart Button */}
          <div className="mt-6">
            <button
              onClick={() => router.push('/natal-wizard')}
              className={`w-full py-3 px-4 rounded-xl font-medium transition-colors ${
                isProfileComplete
                  ? 'bg-emerald-600 hover:bg-emerald-700 text-white'
                  : 'bg-yellow-600 hover:bg-yellow-700 text-white'
              }`}
            >
              {isProfileComplete ? '–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Ç–∞–ª—å–Ω—É—é –∫–∞—Ä—Ç—É' : '–ó–∞–ø–æ–ª–Ω–∏—Ç—å –Ω–∞—Ç–∞–ª—å–Ω—É—é –∫–∞—Ä—Ç—É'}
            </button>
          </div>
        </div>

        {/* Additional Profile Info */}
        {natalChartData && (
          <div className="bg-zinc-900 rounded-2xl p-6 space-y-4">
            <h3 className="text-lg font-semibold">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
            
            <div className="grid grid-cols-2 gap-4 text-sm">
              {natalChartData.gender && (
                <div>
                  <div className="text-zinc-400 mb-1">–ü–æ–ª</div>
                  <div className="text-zinc-200">
                    {natalChartData.gender === 'male' ? '–ú—É–∂—Å–∫–æ–π' : 
                     natalChartData.gender === 'female' ? '–ñ–µ–Ω—Å–∫–∏–π' : '–î—Ä—É–≥–æ–π'}
                  </div>
                </div>
              )}
              
              {natalChartData.relationshipStatus && (
                <div>
                  <div className="text-zinc-400 mb-1">–°–µ–º–µ–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ</div>
                  <div className="text-zinc-200">
                    {natalChartData.relationshipStatus === 'single' ? '–•–æ–ª–æ—Å—Ç/–ù–µ –∑–∞–º—É–∂–µ–º' :
                     natalChartData.relationshipStatus === 'relationship' ? '–í –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö' :
                     natalChartData.relationshipStatus === 'married' ? '–ñ–µ–Ω–∞—Ç/–ó–∞–º—É–∂–µ–º' : '–°–ª–æ–∂–Ω–æ'}
                  </div>
                </div>
              )}
              
              {natalChartData.occupation && (
                <div className="col-span-2">
                  <div className="text-zinc-400 mb-1">–ü—Ä–æ—Ñ–µ—Å—Å–∏—è</div>
                  <div className="text-zinc-200">{natalChartData.occupation}</div>
                </div>
              )}
            </div>

            {natalChartData.interests.length > 0 && (
              <div>
                <div className="text-zinc-400 mb-2">–ò–Ω—Ç–µ—Ä–µ—Å—ã</div>
                <div className="flex flex-wrap gap-2">
                  {natalChartData.interests.map((interest, index) => (
                    <span
                      key={index}
                      className="px-3 py-1 bg-emerald-500/20 border border-emerald-500/30 rounded-full text-sm text-emerald-300"
                    >
                      {interest}
                    </span>
                  ))}
                </div>
              </div>
            )}
          </div>
        )}

        {/* Notification Settings */}
        <div className="bg-zinc-900 rounded-2xl p-6 space-y-4">
          <h3 className="text-lg font-semibold">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</h3>
          
          <div className="space-y-4">
            <div className="flex items-center justify-between p-4 bg-zinc-800 rounded-xl">
              <div className="flex items-center space-x-3">
                <div className="w-10 h-10 bg-blue-500/20 rounded-full flex items-center justify-center">
                  <span className="text-lg">üîî</span>
                </div>
                <div>
                  <div className="font-medium">Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</div>
                  <div className="text-sm text-zinc-400">–û–±—â–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</div>
                </div>
              </div>
              <label className="relative inline-flex items-center cursor-pointer">
                <input
                  type="checkbox"
                  checked={notifications.push}
                  onChange={() => handleToggle('push')}
                  className="sr-only peer"
                />
                <div className="w-11 h-6 bg-zinc-700 peer-focus:outline-none rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-emerald-600"></div>
              </label>
            </div>

            <div className="flex items-center justify-between p-4 bg-zinc-800 rounded-xl">
              <div className="flex items-center space-x-3">
                <div className="w-10 h-10 bg-yellow-500/20 rounded-full flex items-center justify-center">
                  <span className="text-lg">‚òÄÔ∏è</span>
                </div>
                <div>
                  <div className="font-medium">–î–Ω–µ–≤–Ω–æ–π –ø—Ä–æ–≥–Ω–æ–∑ (09:00)</div>
                  <div className="text-sm text-zinc-400">–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã</div>
                </div>
              </div>
              <label className="relative inline-flex items-center cursor-pointer">
                <input
                  type="checkbox"
                  checked={notifications.daily}
                  onChange={() => handleToggle('daily')}
                  className="sr-only peer"
                />
                <div className="w-11 h-6 bg-zinc-700 peer-focus:outline-none rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-emerald-600"></div>
              </label>
            </div>

            <div className="flex items-center justify-between p-4 bg-zinc-800 rounded-xl">
              <div className="flex items-center space-x-3">
                <div className="w-10 h-10 bg-purple-500/20 rounded-full flex items-center justify-center">
                  <span className="text-lg">üìÖ</span>
                </div>
                <div>
                  <div className="font-medium">–ù–µ–¥–µ–ª—å–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑ (–ø–Ω 10:00)</div>
                  <div className="text-sm text-zinc-400">–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –Ω–µ–¥–µ–ª—é –≤–ø–µ—Ä–µ–¥</div>
                </div>
              </div>
              <label className="relative inline-flex items-center cursor-pointer">
                <input
                  type="checkbox"
                  checked={notifications.weekly}
                  onChange={() => handleToggle('weekly')}
                  className="sr-only peer"
                />
                <div className="w-11 h-6 bg-zinc-700 peer-focus:outline-none rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-emerald-600"></div>
              </label>
            </div>
          </div>
        </div>

        {/* Account Actions */}
        <div className="bg-zinc-900 rounded-2xl p-6 space-y-4">
          <h3 className="text-lg font-semibold">–ê–∫–∫–∞—É–Ω—Ç</h3>
          
          <div className="space-y-3">
            <button className="w-full flex items-center justify-between p-4 bg-zinc-800 rounded-xl hover:bg-zinc-700 transition-colors">
              <div className="flex items-center space-x-3">
                <div className="w-10 h-10 bg-blue-500/20 rounded-full flex items-center justify-center">
                  <span className="text-lg">‚öôÔ∏è</span>
                </div>
                <span>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</span>
              </div>
              <span className="text-zinc-400">‚Üí</span>
            </button>

            <button className="w-full flex items-center justify-between p-4 bg-zinc-800 rounded-xl hover:bg-zinc-700 transition-colors">
              <div className="flex items-center space-x-3">
                <div className="w-10 h-10 bg-green-500/20 rounded-full flex items-center justify-center">
                  <span className="text-lg">üíé</span>
                </div>
                <span>–ü—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–∞</span>
              </div>
              <span className="text-zinc-400">‚Üí</span>
            </button>
          </div>
        </div>

        {/* Premium Features */}
        {!isAdmin && (
          <div className="bg-gradient-to-r from-purple-500/20 to-pink-500/20 border border-purple-500/30 rounded-2xl p-6 text-center">
            <div className="text-2xl mb-2">üîÆ</div>
            <h3 className="text-lg font-semibold mb-2">–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∞—Å—Ç—Ä–æ–ª–æ–≥</h3>
            <p className="text-zinc-300 mb-4">–ü–æ–ª—É—á–∏—Ç–µ –¥–æ—Å—Ç—É–ø –∫ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–º –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è–º –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º –ø—Ä–æ–≥–Ω–æ–∑–∞–º</p>
            <button className="bg-purple-600 hover:bg-purple-700 text-white px-6 py-3 rounded-xl font-medium transition-colors">
              –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–µ–º–∏—É–º
            </button>
          </div>
        )}

        {/* Logout Section - –≤ —Å–∞–º–æ–º –Ω–∏–∑—É */}
        <div className="bg-zinc-900 rounded-2xl p-6 mb-8">
          <h3 className="text-lg font-semibold mb-4">–í—ã—Ö–æ–¥ –∏–∑ —Å–∏—Å—Ç–µ–º—ã</h3>
          <button 
            onClick={handleLogout}
            disabled={isLoggingOut}
            className="w-full flex items-center justify-center p-4 bg-red-500/20 border border-red-500/30 rounded-xl hover:bg-red-500/30 transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
          >
            <div className="flex items-center space-x-3">
              <div className="w-10 h-10 bg-red-500/20 rounded-full flex items-center justify-center">
                <span className="text-lg">{isLoggingOut ? '‚è≥' : 'üö™'}</span>
              </div>
              <span className="text-red-300 font-medium">
                {isLoggingOut ? '–í—ã—Ö–æ–¥...' : '–í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞'}
              </span>
            </div>
          </button>
          <p className="text-xs text-zinc-500 mt-3 text-center">
            –ü–æ—Å–ª–µ –≤—ã—Ö–æ–¥–∞ –≤—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
          </p>
        </div>
        </div>
      </PrivateContent>
    </div>
  );
}


