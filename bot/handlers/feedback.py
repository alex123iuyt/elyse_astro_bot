import ssl, smtplib
from aiogram import Router, F, types
from common.config import FEEDBACK_CHAT, YANDEX_EMAIL, YANDEX_PASS
from aiogram import Bot


router = Router()


@router.message(F.text == "üí¨ –§–∏–¥–±—ç–∫")
async def feedback_start(m: types.Message):
    await m.answer("–û–ø–∏—à–∏—Ç–µ –∏–¥–µ—é –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—É –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º ‚Äî —è –ø–µ—Ä–µ—à–ª—é —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É.")


@router.message()
async def feedback_collect(m: types.Message, bot: Bot):
    # –ø—Ä–æ—Å—Ç–æ–π —Ä–æ—É—Ç: –µ—Å–ª–∏ —ç—Ç–æ —è–≤–Ω–æ –Ω–µ –∫–æ–º–∞–Ω–¥–∞ ‚Äî —Å—á–∏—Ç–∞–µ–º —Ñ–∏–¥–±—ç–∫–æ–º
    if m.text and m.text.startswith("/"):
        return
    txt = m.text or "(–ø—É—Å—Ç–æ)"
    if FEEDBACK_CHAT:
        try:
            await bot.send_message(FEEDBACK_CHAT, f"üìù Feedback –æ—Ç @{m.from_user.username or '–±–µ–∑_–Ω–∏–∫–∞'} (id={m.from_user.id}):\n\n{txt}")
        except Exception:
            pass
    if YANDEX_PASS:
        try:
            ctx = ssl.create_default_context()
            with smtplib.SMTP_SSL("smtp.yandex.ru", 465, context=ctx) as server:
                server.login(YANDEX_EMAIL, YANDEX_PASS)
                subject = f"Feedback –æ—Ç {m.from_user.username or m.from_user.id}"
                body = f"userId: {m.from_user.id}\nusername: @{m.from_user.username}\n\n{txt}"
                msg = (
                    f"From: {YANDEX_EMAIL}\r\n"
                    f"To: {YANDEX_EMAIL}\r\n"
                    f"Subject: {subject}\r\n\r\n{body}"
                )
                server.sendmail(YANDEX_EMAIL, [YANDEX_EMAIL], msg.encode("utf-8"))
        except Exception:
            pass
    await m.answer("–°–ø–∞—Å–∏–±–æ! –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")











